{"version":3,"sources":["pages/Login.js","pages/DoctorDashboard.js","pages/FrontDeskDashboard.js","pages/FrontDeskPatientRegister.js","pages/FrontDeskPatientDetails.js","pages/DataEntryDashboard.js","pages/AdminDashboard.js","pages/DoctorRegister.js","pages/DoctorPatientDetails.js","pages/DataEntryRegister.js","pages/FrontdeskRegister.js","pages/DataEntryPatientDetails.js","pages/AdminRegister.js","App.js","index.js"],"names":["Login","role","setRole","useState","email","setEmail","password","setPassword","navigate","useNavigate","React","createElement","className","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","onClick","async","res","axios","post","token","data","localStorage","setItem","alert","err","_err$response","_err$response$data","console","error","response","message","handleRegister","toLowerCase","DoctorDashboard","patients","setPatients","useEffect","log","fetch","headers","Authorization","getItem","json","appointments","fetchPatients","style","padding","fontFamily","fontSize","color","aria-label","handleLogout","removeItem","backgroundColor","border","borderRadius","cursor","marginBottom","length","display","flexWrap","gap","map","patient","key","patient_id","width","background","handlePatientClick","patientId","margin","patient_name","gender","FrontDeskDashboard","loading","setLoading","setError","ok","Error","Array","isArray","maxWidth","justifyContent","alignItems","fontWeight","gridTemplateColumns","p","id","boxShadow","transition","onMouseOver","currentTarget","transform","onMouseOut","name","age","phone","address","stopPropagation","window","confirm","method","prev","filter","handleDelete","marginTop","RegisterPatient","patientData","setPatientData","setMessage","handleChange","prevData","body","JSON","stringify","setTimeout","required","disabled","FrontDeskPatientDetails","useParams","setPatient","doctorList","setDoctorList","selectedDoctorUserId","setSelectedDoctorUserId","doctorId","setDoctorId","appointmentTime","setAppointmentTime","appointmentSuccess","setAppointmentSuccess","fetchPatientDetails","fetchDoctors","selectedDoctor","find","doc","user_id","parseInt","doctor_id","appointment_time","htmlFor","doctor","DataEntryDashboard","AdminDashboard","users","setUsers","setFilter","results","fetchUsers","filteredUsers","u","textAlign","label","_ref","position","textTransform","user","idx","specialization","shift","department","result","prevUsers","errorMessage","DoctorRegister","location","useLocation","form","setForm","_location$state","rolePath","pathname","split","fromPath","state","from","payload","DoctorPatientDetails","description","setDescription","successMsg","setSuccessMsg","errorMsg","setErrorMsg","status","Date","registered_at","toLocaleString","rows","cols","DataEntryRegister","FrontdeskRegister","DataEntryPatientDetails","testData","setTestData","test_name","treatmentData","setTreatmentData","testHistory","setTestHistory","treatmentHistory","setTreatmentHistory","fetchPatient","_data$doctor_id","actualDoctorId","fetchDoctorId","trim","tests","treatments","test","test_date","toLocaleDateString","treat","doctor_name","treatment_date","AdminRegister","App","BrowserRouter","Routes","Route","path","element","PatientRegister","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.9132ba2d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [role, setRole] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async () => {\r\n    if (!role || !email || !password) {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/users/login\", {\r\n        email,\r\n        password,\r\n        role,\r\n      });\r\n\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"role\", role);\r\n\r\n      switch (role) {\r\n        case \"Doctor\":\r\n          navigate(\"/doctor/dashboard\");\r\n          break;\r\n        case \"FrontDesk\":\r\n          navigate(\"/frontdesk/dashboard\");\r\n          break;\r\n        case \"DataEntry\":\r\n          navigate(\"/dataentry/dashboard\");\r\n          break;\r\n        case \"Admin\":\r\n          navigate(\"/admin/dashboard\");\r\n          break;\r\n        default:\r\n          alert(\"Unknown role!\");\r\n          break;\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      alert(\"Login failed: \" + err.response?.data?.message || \"Server error\");\r\n    }\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    if (!role) {\r\n      alert('Please select a role to register');\r\n      return;\r\n    }\r\n    navigate(`/${role.toLowerCase()}/register`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-md\">\r\n        <h2 className=\"text-2xl font-bold mb-6 text-center text-blue-800\">Hospital Management Login</h2>\r\n\r\n        <form onSubmit={(e) => e.preventDefault()} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium\">Select Role</label>\r\n            <select\r\n              value={role}\r\n              onChange={(e) => setRole(e.target.value)}\r\n              className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n            >\r\n              <option value=\"\">-- Choose Role --</option>\r\n              <option value=\"Admin\">Admin</option>\r\n              <option value=\"Doctor\">Doctor</option>\r\n              <option value=\"FrontDesk\">Front Desk</option>\r\n              <option value=\"DataEntry\">Data Entry</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Enter email\"\r\n              className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-gray-700 font-medium\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Enter password\"\r\n              className=\"mt-1 block w-full px-4 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"button\"\r\n            onClick={handleLogin}\r\n            className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition\"\r\n          >\r\n            Login\r\n          </button>\r\n\r\n          <p className=\"text-center mt-4\">\r\n            Not registered?{' '}\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleRegister}\r\n              className=\"text-blue-600 hover:underline font-semibold\"\r\n            >\r\n              Register here\r\n            </button>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DoctorDashboard = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  // Log on component mount\r\n  useEffect(() => {\r\n    console.log(\"📥 DoctorDashboard mounted\");\r\n    \r\n    const fetchPatients = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/doctors/dashboard\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        console.log(\"✅ Fetched patients data:\", data);\r\n\r\n        setPatients(data.appointments || []);\r\n      } catch (err) {\r\n        console.error(\"❌ Failed to fetch patients for doctor:\", err);\r\n      }\r\n    };\r\n\r\n    fetchPatients();\r\n\r\n    return () => {\r\n      console.log(\"📤 DoctorDashboard unmounted\");\r\n    };\r\n  }, []);\r\n\r\n  // Debug function when patient card is clicked\r\n  const handlePatientClick = (patientId) => {\r\n    console.log(`🖱️ Clicked on patient ID: ${patientId}`);\r\n    navigate(`/doctor/${patientId}`);\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    navigate(\"/\");\r\n  };  \r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", fontFamily: \"sans-serif\" }}>\r\n      <h1 style={{ fontSize: \"2rem\", color: \"#2c3e50\" }}>\r\n        <span role=\"img\" aria-label=\"Doctor\">👨‍⚕️</span> Doctor Dashboard\r\n      </h1>\r\n\r\n      {/* Logout Button */}\r\n      <button\r\n        onClick={handleLogout}\r\n        style={{\r\n          backgroundColor: \"#e74c3c\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n\r\n      <h2 style={{ fontSize: \"1.3rem\", color: \"#27ae60\", marginBottom: \"15px\" }}>\r\n        Assigned Patients\r\n      </h2>\r\n\r\n      {patients.length > 0 ? (\r\n        <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"15px\" }}>\r\n          {patients.map((patient) => (\r\n            <div\r\n              key={patient.patient_id}\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                padding: \"15px\",\r\n                width: \"220px\",\r\n                borderRadius: \"10px\",\r\n                background: \"#f9f9f9\",\r\n                cursor: \"pointer\",\r\n              }}\r\n              onClick={() => handlePatientClick(patient.patient_id)}\r\n            >\r\n              <h3 style={{ margin: \"0 0 10px\", color: \"#2980b9\" }}>\r\n                {patient.patient_name}\r\n              </h3>\r\n              <p><strong>Email:</strong> {patient.email}</p>\r\n              <p><strong>Gender:</strong> {patient.gender}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>No patients assigned yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FrontDeskDashboard = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/patients\", {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"Failed to fetch patients\");\r\n\r\n      const data = await res.json();\r\n      setPatients(Array.isArray(data.patients) ? data.patients : []);\r\n    } catch (err) {\r\n      console.error(\"Front desk fetch failed:\", err);\r\n      setError(\"Unable to load patient data.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePatientClick = (id) => {\r\n    navigate(`/frontdesk/${id}`);\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    navigate(\"/frontdesk/dashboard/register\");\r\n  };\r\n\r\n  const handleDelete = async (id, e) => {\r\n    e.stopPropagation();\r\n    if (!window.confirm(\"Are you sure you want to delete this patient?\")) return;\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/patients/delete/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"Delete failed\");\r\n\r\n      setPatients((prev) => prev.filter((patient) => patient.patient_id !== id));\r\n    } catch (err) {\r\n      console.error(\"Error deleting patient:\", err);\r\n      alert(\"Failed to delete patient.\");\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    // Clear token from localStorage\r\n    localStorage.removeItem(\"token\");\r\n    // Redirect to login page or home page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\", maxWidth: \"1200px\", margin: \"0 auto\" }}>\r\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", marginBottom: \"2rem\" }}>\r\n        <h1 style={{ fontSize: \"2rem\", color: \"#1e40af\", fontWeight: \"bold\" }}>Front Desk Dashboard</h1>\r\n        <button\r\n          onClick={handleRegister}\r\n          style={{\r\n            backgroundColor: \"#16a34a\",\r\n            color: \"white\",\r\n            padding: \"0.5rem 1rem\",\r\n            borderRadius: \"8px\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"1rem\",\r\n          }}\r\n        >\r\n          + Register New Patient\r\n        </button>\r\n        <button\r\n          onClick={handleLogout}\r\n          style={{\r\n            backgroundColor: \"#dc2626\",\r\n            color: \"white\",\r\n            padding: \"0.5rem 1rem\",\r\n            borderRadius: \"8px\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n            fontSize: \"1rem\",\r\n          }}\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      <h2 style={{ fontSize: \"1.25rem\", marginBottom: \"1rem\", color: \"#374151\" }}>Registered Patients</h2>\r\n\r\n      {loading ? (\r\n        <p style={{ color: \"#6b7280\" }}>Loading patients...</p>\r\n      ) : error ? (\r\n        <p style={{ color: \"#ef4444\" }}>{error}</p>\r\n      ) : patients.length > 0 ? (\r\n        <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(280px, 1fr))\", gap: \"1.5rem\" }}>\r\n          {patients.map((p) => (\r\n            <div\r\n              key={p.patient_id}\r\n              onClick={() => handlePatientClick(p.patient_id)}\r\n              style={{\r\n                backgroundColor: \"#f9f9f9\",\r\n                borderRadius: \"8px\",\r\n                padding: \"1.5rem\",\r\n                boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n                cursor: \"pointer\",\r\n                transition: \"transform 0.2s ease-in-out\",\r\n              }}\r\n              onMouseOver={(e) => (e.currentTarget.style.transform = \"scale(1.02)\")}\r\n              onMouseOut={(e) => (e.currentTarget.style.transform = \"scale(1)\")}\r\n            >\r\n              <div style={{ marginBottom: \"0.5rem\" }}>\r\n                <h3 style={{ fontSize: \"1.2rem\", fontWeight: \"bold\", color: \"#111827\" }}>{p.name}</h3>\r\n                <p><strong>Age:</strong> {p.age}</p>\r\n                <p><strong>Gender:</strong> {p.gender}</p>\r\n                <p><strong>Phone:</strong> {p.phone}</p>\r\n                <p><strong>Email:</strong> {p.email}</p>\r\n                <p><strong>Address:</strong> {p.address}</p>\r\n                <p><strong>ID:</strong> {p.patient_id}</p>\r\n              </div>\r\n              <button\r\n                onClick={(e) => handleDelete(p.patient_id, e)}\r\n                style={{\r\n                  marginTop: \"0.75rem\",\r\n                  backgroundColor: \"#dc2626\",\r\n                  color: \"white\",\r\n                  padding: \"0.4rem 0.75rem\",\r\n                  border: \"none\",\r\n                  borderRadius: \"4px\",\r\n                  fontSize: \"0.9rem\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p style={{ color: \"#6b7280\" }}>No patients found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrontDeskDashboard;\r\n","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst RegisterPatient = () => {\r\n  const [patientData, setPatientData] = useState({\r\n    name: \"\",\r\n    age: \"\",\r\n    gender: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    email: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPatientData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setMessage(\"\");\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/patients/register\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify(patientData),\r\n      });\r\n\r\n      const data = await res.json();\r\n\r\n      if (!res.ok) {\r\n        throw new Error(data.message || \"Failed to register patient\");\r\n      }\r\n\r\n      setMessage(data.message || \"Patient registered successfully\");\r\n\r\n      // Redirect to the dashboard after 2 seconds\r\n      setTimeout(() => {\r\n        navigate(\"/frontdesk/dashboard\");\r\n      }, 2000);\r\n    } catch (err) {\r\n      setError(err.message || \"Error occurred during registration.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold text-blue-700\">Register New Patient</h1>\r\n      <form onSubmit={handleSubmit} className=\"mt-6\">\r\n        <div className=\"space-y-4\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={patientData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Name\"\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"age\"\r\n            value={patientData.age}\r\n            onChange={handleChange}\r\n            placeholder=\"Age\"\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n          <select\r\n            name=\"gender\"\r\n            value={patientData.gender}\r\n            onChange={handleChange}\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          >\r\n            <option value=\"\">Select Gender</option>\r\n            <option value=\"Male\">Male</option>\r\n            <option value=\"Female\">Female</option>\r\n            <option value=\"Other\">Other</option>\r\n          </select>\r\n          <input\r\n            type=\"text\"\r\n            name=\"address\"\r\n            value={patientData.address}\r\n            onChange={handleChange}\r\n            placeholder=\"Address\"\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"phone\"\r\n            value={patientData.phone}\r\n            onChange={handleChange}\r\n            placeholder=\"Phone Number\"\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={patientData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Email\"\r\n            className=\"w-full p-2 border rounded\"\r\n            required\r\n          />\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"mt-4 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Registering...\" : \"Register Patient\"}\r\n        </button>\r\n      </form>\r\n\r\n      {error && <p className=\"mt-4 text-red-500\">{error}</p>}\r\n      {message && <p className=\"mt-4 text-green-500\">{message}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPatient;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst FrontDeskPatientDetails = () => {\r\n  const { patient_id } = useParams();\r\n  const [patient, setPatient] = useState(null);\r\n  const [doctorList, setDoctorList] = useState([]);\r\n  const [selectedDoctorUserId, setSelectedDoctorUserId] = useState(\"\");\r\n  const [doctorId, setDoctorId] = useState(\"\");\r\n  const [appointmentTime, setAppointmentTime] = useState(\"\");\r\n  const [appointmentSuccess, setAppointmentSuccess] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch patient details\r\n  useEffect(() => {\r\n    const fetchPatientDetails = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/patients/${patient_id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n\r\n        if (!res.ok) throw new Error(\"Failed to fetch patient\");\r\n        const data = await res.json();\r\n        setPatient(data.patient);\r\n      } catch (err) {\r\n        console.error(\"Error fetching patient details:\", err);\r\n        setError(\"Failed to fetch patient details\");\r\n      }\r\n    };\r\n\r\n    fetchPatientDetails();\r\n  }, [patient_id]);\r\n\r\n  // Fetch doctor list\r\n  useEffect(() => {\r\n    const fetchDoctors = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/appointments/list\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n\r\n        if (!res.ok) throw new Error(\"Failed to fetch doctors\");\r\n        const data = await res.json();\r\n        setDoctorList(data);\r\n      } catch (err) {\r\n        console.error(\"Error fetching doctor list:\", err);\r\n        setError(\"Failed to load doctor list\");\r\n      }\r\n    };\r\n\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  // When selected user_id changes, find and set doctor_id\r\n  useEffect(() => {\r\n    const selectedDoctor = doctorList.find(doc => doc.user_id === parseInt(selectedDoctorUserId));\r\n    if (selectedDoctor) setDoctorId(selectedDoctor.doctor_id);\r\n  }, [selectedDoctorUserId, doctorList]);\r\n\r\n  const handleAppointmentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!doctorId || !appointmentTime) {\r\n      setError(\"Please provide all appointment details.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/appointments/${patient_id}/book`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({\r\n          doctor_id: doctorId,\r\n          appointment_time: appointmentTime,\r\n        }),\r\n      });\r\n\r\n      if (!res.ok) throw new Error(\"Failed to book appointment\");\r\n\r\n      setAppointmentSuccess(true);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      console.error(\"Appointment error:\", err);\r\n      setError(\"Error booking appointment: \" + err.message);\r\n    }\r\n  };\r\n\r\n  if (!patient) return <p>Loading patient details...</p>;\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <h2 className=\"text-3xl font-bold text-blue-700 mb-4\">Patient Details</h2>\r\n\r\n      <div className=\"mb-6 space-y-1\">\r\n        <p><strong>Name:</strong> {patient.name}</p>\r\n        <p><strong>Age:</strong> {patient.age}</p>\r\n        <p><strong>Gender:</strong> {patient.gender}</p>\r\n        <p><strong>Email:</strong> {patient.email}</p>\r\n        <p><strong>Phone:</strong> {patient.phone}</p>\r\n        <p><strong>Address:</strong> {patient.address}</p>\r\n      </div>\r\n\r\n      <h3 className=\"text-xl font-semibold\">Book an Appointment</h3>\r\n\r\n      {appointmentSuccess && <p className=\"text-green-500 mb-4\">Appointment booked successfully!</p>}\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n      <form onSubmit={handleAppointmentSubmit} className=\"space-y-4\">\r\n        <div className=\"flex flex-col\">\r\n          <label htmlFor=\"doctorSelect\" className=\"font-medium\">Select Doctor</label>\r\n          <select\r\n            id=\"doctorSelect\"\r\n            className=\"p-2 border rounded-md\"\r\n            value={selectedDoctorUserId}\r\n            onChange={(e) => setSelectedDoctorUserId(e.target.value)}\r\n          >\r\n            <option value=\"\">-- Select Doctor --</option>\r\n            {doctorList.map((doctor) => (\r\n              <option key={`${doctor.user_id}-${doctor.doctor_id}`} value={doctor.user_id}>\r\n                {doctor.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"flex flex-col\">\r\n          <label htmlFor=\"appointment_time\" className=\"font-medium\">Appointment Time</label>\r\n          <input\r\n            type=\"datetime-local\"\r\n            id=\"appointment_time\"\r\n            value={appointmentTime}\r\n            onChange={(e) => setAppointmentTime(e.target.value)}\r\n            className=\"p-2 border rounded-md\"\r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\">\r\n          Book Appointment\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrontDeskPatientDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DataEntryDashboard = () => {\r\n  const [patients, setPatients] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/dataEntry/patients\", {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        const data = await res.json();\r\n        setPatients(data?.patients || []);\r\n      } catch (err) {\r\n        console.error(\"Data Entry fetch failed:\", err);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchPatients();\r\n    }\r\n  }, [token]); // ✅ added token as a dependency\r\n\r\n  const handlePatientClick = (patientId) => {\r\n    navigate(`/dataentry/${patientId}`);\r\n  };\r\n\r\n  // Logout function\r\n  const handleLogout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem(\"token\");\r\n    // Navigate to home page\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h1>Data Entry Dashboard</h1>\r\n      \r\n      {/* Logout Button */}\r\n      <button\r\n        onClick={handleLogout}\r\n        style={{\r\n          backgroundColor: \"#e74c3c\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n\r\n      <h2>Patients</h2>\r\n      <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"20px\" }}>\r\n        {patients.map((p) => (\r\n          <div\r\n            key={p.patient_id}\r\n            style={{\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: \"10px\",\r\n              padding: \"10px\",\r\n              cursor: \"pointer\",\r\n              width: \"200px\",\r\n            }}\r\n            onClick={() => handlePatientClick(p.patient_id)}\r\n          >\r\n            <strong>{p.name}</strong>\r\n            <p>Age: {p.age}</p>\r\n            <p>Gender: {p.gender}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataEntryDashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState([]);\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  // Fetch Users\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const res = await fetch(\"http://localhost:5000/api/users\", {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n        const data = await res.json();\r\n        setUsers(Array.isArray(data.results) ? data.results : []);\r\n      } catch (err) {\r\n        console.error(\"Admin fetch failed:\", err);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Delete User\r\n  const handleDelete = async (id) => {\r\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this user?\");\r\n    if (!confirmDelete) return;\r\n\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/users/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n      });\r\n\r\n      const result = await res.json();\r\n\r\n      if (res.ok) {\r\n        setUsers((prevUsers) => prevUsers.filter((u) => u.user_id !== id));\r\n        alert(result.message || \"User deleted successfully.\");\r\n      } else {\r\n        const errorMessage = typeof result.message === \"string\"\r\n          ? result.message\r\n          : JSON.stringify(result.message);\r\n        alert(`Delete failed: ${errorMessage}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Delete failed:\", err);\r\n      alert(\"An error occurred while deleting the user.\");\r\n    }\r\n  };\r\n\r\n  const filteredUsers = filter === \"all\" ? users : users.filter((u) => u.role === filter);\r\n\r\n  const categories = [\r\n    { label: \"Doctors\", role: \"doctor\" },\r\n    { label: \"Frontdesk\", role: \"frontdesk\" },\r\n    { label: \"Data Entry\", role: \"dataentry\" },\r\n  ];\r\n\r\n  // Logout function\r\n  const handleLogout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem(\"token\");\r\n    // Navigate to home page\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <h1>Admin Dashboard</h1>\r\n\r\n      {/* Logout Button */}\r\n      <button\r\n        onClick={handleLogout}\r\n        style={{\r\n          backgroundColor: \"#e74c3c\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          padding: \"10px 20px\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        Logout\r\n      </button>\r\n\r\n      <div style={{ display: \"flex\", gap: \"1rem\", marginBottom: \"2rem\" }}>\r\n        <div\r\n          onClick={() => setFilter(\"all\")}\r\n          style={{\r\n            padding: \"1rem\",\r\n            backgroundColor: \"#f0f0f0\",\r\n            borderRadius: \"8px\",\r\n            cursor: \"pointer\",\r\n            width: \"150px\",\r\n            textAlign: \"center\",\r\n            boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n          }}  \r\n        >\r\n          <strong>All</strong>\r\n          <p>{users.length} users</p>\r\n        </div>\r\n\r\n        {categories.map(({ label, role }) => (\r\n          <div\r\n            key={role}\r\n            style={{\r\n              padding: \"1rem\",\r\n              backgroundColor: \"#f0f0f0\",\r\n              borderRadius: \"8px\",\r\n              width: \"150px\",\r\n              textAlign: \"center\",\r\n              boxShadow: \"0 0 10px rgba(0,0,0,0.1)\",\r\n              position: \"relative\"\r\n            }}\r\n          >\r\n            <div style={{ cursor: \"pointer\" }} onClick={() => setFilter(role)}>\r\n              <strong>{label}</strong>\r\n              <p>{users.filter((u) => u.role === role).length} users</p>\r\n            </div>\r\n            <button\r\n              onClick={() => navigate(`/${role}/register`)}\r\n              style={{\r\n                marginTop: \"0.5rem\",\r\n                padding: \"0.4rem 0.8rem\",\r\n                backgroundColor: \"#007bff\",\r\n                color: \"white\",\r\n                border: \"none\",\r\n                borderRadius: \"4px\",\r\n                cursor: \"pointer\",\r\n                fontSize: \"0.8rem\",\r\n              }}\r\n            >\r\n              + Add\r\n            </button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <h3 style={{ textTransform: \"capitalize\" }}>{filter} List</h3>\r\n\r\n      {filteredUsers.length > 0 ? (\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fit, minmax(250px, 1fr))\",\r\n            gap: \"1rem\",\r\n          }}\r\n        >\r\n          {filteredUsers.map((user, idx) => (\r\n            <div\r\n              key={idx}\r\n              style={{\r\n                border: \"1px solid #ccc\",\r\n                padding: \"1rem\",\r\n                borderRadius: \"8px\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <p><strong>Name:</strong> {user.name}</p>\r\n              <p><strong>Email:</strong> {user.email}</p>\r\n              <p><strong>Role:</strong> {user.role}</p>\r\n              {user.phone && <p><strong>Phone:</strong> {user.phone}</p>}\r\n              {user.specialization && <p><strong>Specialization:</strong> {user.specialization}</p>}\r\n              {user.shift && <p><strong>Shift:</strong> {user.shift}</p>}\r\n              {user.department && <p><strong>Department:</strong> {user.department}</p>}\r\n\r\n              <button\r\n                onClick={() => handleDelete(user.user_id)}\r\n                style={{\r\n                  marginTop: \"1rem\",\r\n                  padding: \"0.5rem 1rem\",\r\n                  backgroundColor: \"#ff4d4d\",\r\n                  color: \"white\",\r\n                  border: \"none\",\r\n                  borderRadius: \"4px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>No users found for this category.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst DoctorRegister = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phone: '',\r\n    specialization: '',\r\n  });\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const rolePath = location.pathname.split(\"/\")[1]; \r\n      const fromPath = location.state?.from || \"/\";     \r\n  \r\n      const payload = { ...form, role: rolePath || \"admin\" };\r\n  \r\n      const res = await axios.post(\"http://localhost:5000/api/users/register\", payload);\r\n      alert(res.data.message);\r\n  \r\n      navigate(fromPath);  \r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Error occurred\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Doctor Registration</h2>\r\n      <input name=\"name\" placeholder=\"Name\" onChange={handleChange} />\r\n      <input name=\"email\" placeholder=\"Email\" onChange={handleChange} />\r\n      <input name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\r\n      <input name=\"phone\" placeholder=\"Phone\" onChange={handleChange} />\r\n      <input name=\"specialization\" placeholder=\"Specialization\" onChange={handleChange} />\r\n      <button onClick={handleSubmit}>Register</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorRegister;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst DoctorPatientDetails = () => {\r\n  const { patient_id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [patient, setPatient] = useState(null);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [successMsg, setSuccessMsg] = useState(\"\");\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchPatientDetails = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/doctors/dashboard/${patient_id}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n          },\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (response.status === 401 || response.status === 403) {\r\n          setErrorMsg(\"Access denied. Please login with correct credentials.\");\r\n        } else if (response.ok) {\r\n          setPatient(data);\r\n        } else {\r\n          setErrorMsg(data.message || \"Patient not found\");\r\n        }\r\n      } catch (error) {\r\n        setErrorMsg(\"Failed to fetch patient details.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPatientDetails();\r\n  }, [patient_id]);\r\n\r\n  const handlePrescriptionSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSuccessMsg(\"\");\r\n    setErrorMsg(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/doctors/dashboard/prescribe\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        body: JSON.stringify({ patient_id, description }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSuccessMsg(data.message);\r\n        setDescription(\"\");\r\n      } else {\r\n        setErrorMsg(data.message || \"Failed to submit prescription.\");\r\n      }\r\n    } catch (error) {\r\n      setErrorMsg(\"Error submitting prescription.\");\r\n    }\r\n  };\r\n\r\n  if (loading) return <p>Loading patient details...</p>;\r\n  if (errorMsg) return <p style={{ color: \"red\" }}>{errorMsg}</p>;\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", fontFamily: \"sans-serif\" }}>\r\n      <h2 style={{ color: \"#2c3e50\" }}>\r\n        <span role=\"img\" aria-label=\"stethoscope\">🩺</span> Patient Details\r\n      </h2>\r\n\r\n      {patient ? (\r\n        <div style={{ marginBottom: \"20px\", background: \"#f0f0f0\", padding: \"15px\", borderRadius: \"10px\" }}>\r\n          <p><strong>Name:</strong> {patient.name}</p>\r\n          <p><strong>Age:</strong> {patient.age}</p>\r\n          <p><strong>Gender:</strong> {patient.gender}</p>\r\n          <p><strong>Phone:</strong> {patient.phone}</p>\r\n          <p><strong>Email:</strong> {patient.email}</p>\r\n          <p><strong>Address:</strong> {patient.address}</p>\r\n          <p><strong>Registered At:</strong> {new Date(patient.registered_at).toLocaleString()}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Patient data not found.</p>\r\n      )}\r\n\r\n      <h3 style={{ color: \"#27ae60\" }}> Write Prescription</h3>\r\n      <form onSubmit={handlePrescriptionSubmit}>\r\n        <textarea\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          placeholder=\"Enter prescription details...\"\r\n          rows={5}\r\n          cols={60}\r\n          required\r\n          style={{ padding: \"10px\", borderRadius: \"5px\", border: \"1px solid #ccc\" }}\r\n        />\r\n        <br /><br />\r\n        <button\r\n          type=\"submit\"\r\n          style={{\r\n            background: \"#2980b9\",\r\n            color: \"white\",\r\n            border: \"none\",\r\n            padding: \"10px 20px\",\r\n            borderRadius: \"5px\",\r\n            cursor: \"pointer\"\r\n          }}\r\n        >\r\n          Submit Prescription\r\n        </button>\r\n      </form>\r\n\r\n      {successMsg && <p style={{ color: \"green\", marginTop: \"10px\" }}>{successMsg}</p>}\r\n      {errorMsg && <p style={{ color: \"red\", marginTop: \"10px\" }}>{errorMsg}</p>}\r\n\r\n      <br />\r\n      <button\r\n        onClick={() => navigate(\"/doctor/dashboard\")}\r\n        style={{\r\n          background: \"#7f8c8d\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          padding: \"8px 16px\",\r\n          borderRadius: \"5px\",\r\n          cursor: \"pointer\"\r\n        }}\r\n      >\r\n        <span role=\"img\" aria-label=\"back\">🔙</span> Back to Dashboard\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorPatientDetails;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst DataEntryRegister = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phone: '',\r\n  });\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const rolePath = location.pathname.split(\"/\")[1]; \r\n      const fromPath = location.state?.from || \"/\";     \r\n  \r\n      const payload = { ...form, role: rolePath || \"admin\" };\r\n  \r\n      const res = await axios.post(\"http://localhost:5000/api/users/register\", payload);\r\n      alert(res.data.message);\r\n  \r\n      navigate(fromPath);  \r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Error occurred\");\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>DataEntry Registration</h2>\r\n      <input name=\"name\" placeholder=\"Name\" onChange={handleChange} />\r\n      <input name=\"email\" placeholder=\"Email\" onChange={handleChange} />\r\n      <input name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\r\n      <input name=\"phone\" placeholder=\"Phone\" onChange={handleChange} />\r\n      <button onClick={handleSubmit}>Register</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataEntryRegister;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst FrontdeskRegister = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    phone: ''\r\n  });\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const rolePath = location.pathname.split(\"/\")[1]; \r\n      const fromPath = location.state?.from || \"/\";     \r\n  \r\n      const payload = { ...form, role: rolePath || \"admin\" };\r\n  \r\n      const res = await axios.post(\"http://localhost:5000/api/users/register\", payload);\r\n      alert(res.data.message);\r\n  \r\n      navigate(fromPath);  \r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Error occurred\");\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Frontdesk Registration</h2>\r\n      <input name=\"name\" placeholder=\"Name\" onChange={handleChange} />\r\n      <input name=\"email\" placeholder=\"Email\" onChange={handleChange} />\r\n      <input name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\r\n      <input name=\"phone\" placeholder=\"Phone\" onChange={handleChange} />\r\n      <button onClick={handleSubmit}>Register</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FrontdeskRegister;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\n\r\nconst DataEntryPatientDetails = () => {\r\n  \r\n  const { patient_id } = useParams();\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const [patient, setPatient] = useState({});\r\n  const [testData, setTestData] = useState({ patient_id, test_name: \"\", result: \"\" });\r\n  const [treatmentData, setTreatmentData] = useState({ patient_id, doctor_id: \"\", description: \"\" });\r\n  const [testHistory, setTestHistory] = useState([]);\r\n  const [treatmentHistory, setTreatmentHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPatient = async () => {\r\n      const res = await fetch(`http://localhost:5000/api/dataEntry/patients/${patient_id}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      const data = await res.json();\r\n      setPatient(data.patient);\r\n    };\r\n    fetchPatient();\r\n  }, [patient_id, token]);\r\n\r\n  useEffect(() => {\r\n    const fetchDoctorId = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/api/dataEntry/patients/${patient_id}/doctor_id`, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n\r\n        const data = await res.json();\r\n        if (res.ok) {\r\n            const actualDoctorId = data.doctor_id?.doctor_id;\r\n            setTreatmentData((prev) => ({ ...prev, doctor_id: actualDoctorId }));   \r\n        } else {\r\n          alert(data.message || \"Doctor ID fetch failed.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching doctor ID:\", error);\r\n      }\r\n    };\r\n    fetchDoctorId();\r\n  }, [patient_id, token]);\r\n\r\n\r\n  const handleAddTest = async () => {\r\n    if (!testData.test_name) return alert(\"Test name required\");\r\n\r\n    const res = await fetch(`http://localhost:5000/api/dataEntry/patients/${patient_id}/tests`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(testData),\r\n\r\n    });\r\n\r\n    const data = await res.json();\r\n    alert(data.message);\r\n    setTestData({ test_name: \"\", result: \"\" });\r\n  };\r\n\r\n\r\n  const handleAddTreatment = async () => {\r\n    if (!treatmentData.description.trim()) return alert(\"Description is required\");\r\n\r\n    const res = await fetch(`http://localhost:5000/api/dataEntry/patients/${patient_id}/treatments`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      body: JSON.stringify(treatmentData),\r\n    });\r\n\r\n    console.log(treatmentData)\r\n    const data = await res.json();\r\n    alert(data.message);\r\n    setTreatmentData({ description: \"\" });\r\n  };\r\n\r\n\r\n  const fetchTestHistory = async () => {\r\n    const res = await fetch(`http://localhost:5000/api/dataEntry/patients/${patient_id}/tests`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    const data = await res.json();\r\n    setTestHistory(data.tests || []);\r\n  };\r\n\r\n  const fetchTreatmentHistory = async () => {\r\n    const res = await fetch(`http://localhost:5000/api/dataEntry/patients/${patient_id}/treatments`, {\r\n      headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n    const data = await res.json();\r\n    setTreatmentHistory(data.treatments || []);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <button onClick={() => navigate(\"/dataentry/dashboard\")}>\r\n        <span role=\"img\" aria-label=\"Back\">🔙</span> Back to Dashboard\r\n      </button>\r\n\r\n      <h2>Patient: {patient.name}</h2>\r\n\r\n      <div style={{ margin: \"20px 0\", border: \"1px solid #eee\", padding: \"10px\" }}>\r\n        <h3>Add Test</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Test Name\"\r\n          value={testData.test_name}\r\n          onChange={(e) => setTestData({ ...testData, test_name: e.target.value })}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Result\"\r\n          value={testData.result}\r\n          onChange={(e) => setTestData({ ...testData, result: e.target.value })}\r\n        />\r\n        <button onClick={handleAddTest}>\r\n          <span role=\"img\" aria-label=\"Add Test\">➕</span> Add Test\r\n        </button>\r\n      </div>\r\n\r\n      <div style={{ margin: \"20px 0\", border: \"1px solid #eee\", padding: \"10px\" }}>\r\n        <h3>Add Treatment</h3>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={treatmentData.description}\r\n          onChange={(e) => setTreatmentData({ ...treatmentData, description: e.target.value })}\r\n        />\r\n        <button onClick={handleAddTreatment}>\r\n          <span role=\"img\" aria-label=\"Add Treatment\">➕</span> Add Treatment\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <h3>History</h3>\r\n        <button onClick={fetchTestHistory}>\r\n          <span role=\"img\" aria-label=\"Test History\">📜</span> Test History\r\n        </button>\r\n        <button onClick={fetchTreatmentHistory}>\r\n          <span role=\"img\" aria-label=\"Treatment History\">📜</span> Treatment History\r\n        </button>\r\n      </div>\r\n\r\n      {testHistory.length > 0 && (\r\n        <div style={{ marginTop: \"15px\" }}>\r\n          <h4>Test History</h4>\r\n          <ul>\r\n            {testHistory.map((test, idx) => (\r\n              <li key={idx}>\r\n                <strong>{test.test_name}</strong> - {test.result || \"No Result\"} on {new Date(test.test_date).toLocaleDateString()}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {treatmentHistory.length > 0 && (\r\n        <div style={{ marginTop: \"15px\" }}>\r\n          <h4>Treatment History</h4>\r\n          <ul>\r\n            {treatmentHistory.map((treat, idx) => (\r\n              <li key={idx}>\r\n                <strong>{treat.description}</strong> by Dr. {treat.doctor_name} on {new Date(treat.treatment_date).toLocaleDateString()}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataEntryPatientDetails;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst AdminRegister = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const rolePath = location.pathname.split(\"/\")[1]; \r\n      const fromPath = location.state?.from || \"/\";     \r\n  \r\n      const payload = { ...form, role: rolePath || \"admin\" };\r\n  \r\n      const res = await axios.post(\"http://localhost:5000/api/users/register\", payload);\r\n      alert(res.data.message);\r\n  \r\n      navigate(fromPath);  \r\n    } catch (err) {\r\n      alert(err.response?.data?.message || \"Error occurred\");\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Admin Registration</h2>\r\n      <input name=\"name\" placeholder=\"Name\" onChange={handleChange} />\r\n      <input name=\"email\" placeholder=\"Email\" onChange={handleChange} />\r\n      <input name=\"password\" placeholder=\"Password\" type=\"password\" onChange={handleChange} />\r\n      <button onClick={handleSubmit}>Register</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminRegister;\r\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Login from \"./pages/Login.js\";\nimport DoctorDashboard from \"./pages/DoctorDashboard\";\nimport FrontDeskDashboard from \"./pages/FrontDeskDashboard.js\";\nimport PatientRegister from './pages/FrontDeskPatientRegister.js'\nimport FrontDeskPatientDetails from \"./pages/FrontDeskPatientDetails.js\";\nimport DataEntryDashboard from \"./pages/DataEntryDashboard\";\nimport AdminDashboard from \"./pages/AdminDashboard\";\nimport DoctorRegister from './pages/DoctorRegister';\nimport DoctorPatientDetails from './pages/DoctorPatientDetails.js'\nimport DataEntryRegister from './pages/DataEntryRegister';\nimport FrontdeskRegister from './pages/FrontdeskRegister';\nimport DataEntryPatientDetails from './pages/DataEntryPatientDetails.js'\nimport AdminRegister from './pages/AdminRegister';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n\n        <Route path=\"/\" element={<Login />} />\n\n        <Route path=\"/doctor/register\" element={<DoctorRegister />} />\n        <Route path=\"/frontdesk/register\" element={<FrontdeskRegister />} />\n        <Route path=\"/dataentry/register\" element={<DataEntryRegister />} />\n        <Route path=\"/admin/register\" element={<AdminRegister />} />\n\n      \n        <Route path=\"/doctor/dashboard\" element={<DoctorDashboard />} />\n        <Route path=\"/doctor/:patient_id\" element={<DoctorPatientDetails />} />\n\n        <Route path=\"/dataentry/:patient_id\" element={<DataEntryPatientDetails />} />\n        <Route path=\"/dataentry/dashboard\" element={<DataEntryDashboard />} />\n\n        <Route path=\"/admin/dashboard\" element={<AdminDashboard />} />\n\n        <Route path=\"/frontdesk/dashboard\" element={<FrontDeskDashboard />} />\n        <Route path=\"/frontdesk/dashboard/register\" element={<PatientRegister />} />\n        <Route path=\"/frontdesk/:patient_id\" element={<FrontDeskPatientDetails />} />\n\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css'; // Tailwind CSS is linked here\nimport App from './App.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}